# ============================================
# APPS
# Basic application launchers that don't need re-focusing behavior
# ============================================

$terminal = ghostty
$terminal-window-class = com.mitchellh.ghostty
$browser = vivaldi --ozone-platform=wayland %U
$editor = ~/.local/bin/zed
$file-manager-gui = thunar
$file-manager-tui = $terminal -e ~/.cargo/bin/yazi
$launcher = walker
$launcher-clipboard = walker -x -q "/clipboard"
$launcher-snippets = walker -x -q "/snippets"
$screenshot-free = grim -g "$(slurp)" - | swappy -f -
$screenshot-window = grim -g "$(hyprctl clients -j | jq -r '.[] | "\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1]) \(.title)"' | slurp -r)" - | swappy -f -

# ============================================
# FOCUS APPS
# Apps that can be launched once and re-focused to instead of creating multiple instances.
# Pattern: Check if window exists -> Focus existing OR Launch new
# ============================================

$todo-focus-identifier = todo
$todo-focus = (hyprctl clients -j | jq -r '.[] | select(.title == "$todo-focus-identifier") | .address' | head -n1 | grep -q . && hyprctl dispatch focuswindow address:$(hyprctl clients -j | jq -r '.[] | select(.title == "$todo-focus-identifier") | .address' | head -n1)) || $terminal --title="$todo-focus-identifier" -e todo

$email-focus-identifier = neomutt
$email-focus = (hyprctl clients -j | jq -r '.[] | select(.title == "$email-focus-identifier") | .address' | head -n1 | grep -q . && hyprctl dispatch focuswindow address:$(hyprctl clients -j | jq -r '.[] | select(.title == "$email-focus-identifier") | .address' | head -n1)) || $terminal --title="$email-focus-identifier" -e neomutt

$password-manager-focus-identifier = com.bitwarden.desktop
$password-manager-focus = (hyprctl clients -j | jq -r '.[] | select(.class == "$password-manager-focus-identifier") | .address' | head -n1 | grep -q . && hyprctl dispatch focuswindow address:$(hyprctl clients -j | jq -r '.[] | select(.class == "$password-manager-focus-identifier") | .address' | head -n1)) || flatpak run com.bitwarden.desktop

# ============================================
# SCRATCHPADS
# ============================================

$scratchpad-size = 1600 800

$chat-scratchpad-identifier = chat-scratchpad
$chat-scratchpad = (hyprctl clients -j | jq -e '.[] | select(.workspace.name == "special:$chat-scratchpad-identifier")' >/dev/null && hyprctl dispatch togglespecialworkspace $chat-scratchpad-identifier) || hyprctl dispatch exec "[workspace special:$chat-scratchpad-identifier] chromium --ozone-platform=wayland --enable-features=UseOzonePlaform --app=https://messages.google.com/web --disable-infobars"

$easyeffects-scratchpad-identifier = easyeffects-scratchpad
$easyeffects-scratchpad = (hyprctl clients -j | jq -e '.[] | select(.workspace.name == "special:$easyeffects-scratchpad-identifier")' >/dev/null && hyprctl dispatch togglespecialworkspace $easyeffects-scratchpad-identifier) || hyprctl dispatch exec "[workspace special:$easyeffects-scratchpad-identifier] flatpak run com.github.wwmm.easyeffects"

$email-scratchpad-identifier = email-scratchpad
$email-scratchpad = (hyprctl clients -j | jq -e '.[] | select(.workspace.name == "special:$email-scratchpad-identifier")' >/dev/null && hyprctl dispatch togglespecialworkspace $email-scratchpad-identifier) || hyprctl dispatch exec "[workspace special:$email-scratchpad-identifier] ghostty --title=email-scratchpad -e zsh -i -c 'neomutt'"

$password-manager-scratchpad-identifier = password-manager-scratchpad
$password-manager-scratchpad = (hyprctl clients -j | jq -e '.[] | select(.workspace.name == "special:$password-manager-scratchpad-identifier")' >/dev/null && hyprctl dispatch togglespecialworkspace $password-manager-scratchpad-identifier) || hyprctl dispatch exec "[workspace special:$password-manager-scratchpad-identifier] flatpak run com.bitwarden.desktop"

$todo-scratchpad-identifier = todo-scratchpad
$todo-scratchpad = (hyprctl clients -j | jq -e '.[] | select(.workspace.name == "special:$todo-scratchpad-identifier")' >/dev/null && hyprctl dispatch togglespecialworkspace $todo-scratchpad-identifier) || hyprctl dispatch exec "[workspace special:$todo-scratchpad-identifier] ghostty --title=todo-scratchpad -e zsh -i -c 'todo'"

$pamix-scratchpad-identifier = pamix-scratchpad
$pamix-scratchpad = (hyprctl clients -j | jq -e '.[] | select(.workspace.name == "special:$pamix-scratchpad-identifier")' >/dev/null && hyprctl dispatch togglespecialworkspace $pamix-scratchpad-identifier) || hyprctl dispatch exec "[workspace special:$pamix-scratchpad-identifier] ghostty --title=pamix-scratchpad -e pamix"

$music-scratchpad-identifier = music-scratchpad
$music-scratchpad = (hyprctl clients -j | jq -e '.[] | select(.workspace.name == "special:$music-scratchpad-identifier")' >/dev/null && hyprctl dispatch togglespecialworkspace $music-scratchpad-identifier) || hyprctl dispatch exec "[workspace special:$music-scratchpad-identifier] ghostty --title=music-scratchpad -e mocp"

# ============================================
# MEDIA CONTROLS
# ============================================

$music-next = /usr/bin/mocp --next
$music-prev = /usr/bin/mocp --previous
$music-pause = /usr/bin/mocp --toggle-pause
$volume-up = ~/.config/hypr/scripts/system/volume-control.sh up
$volume-down = ~/.config/hypr/scripts/system/volume-control.sh down
$volume-mute = ~/.config/hypr/scripts/system/volume-control.sh mute

# ============================================
# SYSTEM CONTROLS
# ============================================

$alt-tab = ~/.config/hypr/scripts/system/alt-tab.sh
$brightness-down = brightnessctl s 10%- && notify-send -t 1000 -h string:x-canonical-private-synchronous:brightness "Brightness" "$(brightnessctl g | awk -v max=$(brightnessctl m) '{printf "%.0f%%", ($1/max)*100}')"
$brightness-up = brightnessctl s 10%+ && notify-send -t 1000 -h string:x-canonical-private-synchronous:brightness "Brightness" "$(brightnessctl g | awk -v max=$(brightnessctl m) '{printf "%.0f%%", ($1/max)*100}')"
$night-light = bash ~/.config/hypr/scripts/system/hyprsunset.sh cycle
$lock = hyprlock
$vpn-toggle = mullvad status | grep -q Connected && mullvad disconnect || mullvad connect